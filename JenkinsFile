pipeline{
    agent{
        docker{
            image 'maven:3.6.3-jdk-11'
            args '-v /root/.m2:/root/.m2'
        }
    }
    environment{
        New_Version = '1.0.3'
    }
    stages{
        stage("Build"){
            steps{
                echo "Maven compiling"
                sh 'mvn compile'
            }
            post{
                success{
                    echo "========Maven compile stage executed successfully ${New_Version}========"
                }
                failure{
                    echo "========Maven compile stage execution failed========"
                }
            }
        }
        stage("build & SonarQube analysis") {
            steps {
              withSonarQubeEnv('sonarqube') {
                sh 'mvn verify sonar:sonar'
              }
            }
          }
        stage("Test"){
            steps{
                echo "Maven Test"
                sh 'mvn test'
            }
            post{
                success{
                    echo "========Maven Test stage executed successfully  ${New_Version}========"

                }
                failure{
                    echo "========Maven Test stage execution failed========"
                }
            }
        }
         stage("Packaging"){
            steps{
                echo "Maven Packaging"
                sh 'mvn package'
            }
            post{
                success{
                    archiveArtifacts 'target/*.jar'
                    echo "========Maven Packaging stage executed successfully  ${New_Version}========"

                }
                
                failure{
                    echo "========Maven Packaging stage execution failed========"
                }
            }
        }
          stage("Deployee"){
           when {
                expression {
                        currentBuild.result == null || currentBuild.result == 'SUCCESS'
                }
            }
                steps {
                    echo "========Deploying  ${New_Version}========"
                    }
            post{
                success{
                    echo "========Deploying executed successfully  ${New_Version}========"

                }
                
                failure{
                    echo "========Deploying stage execution failed========"
                }
            }
        }
    }
    post{
        always{
            echo "========Running ${env.BUILD_ID} on ${env.JENKINS_URL}========"
        }
        changed{
                    echo "========Their is change in Packaging from pervious========"
                }
        success{
            echo "========pipeline executed successfully ========"
        }
        failure{
            echo "========pipeline execution failed========"
        }
    }
}